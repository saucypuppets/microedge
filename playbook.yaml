- name: Configure Iptables Rules
  hosts: Micros
  become: yes # This playbook requires root privileges

  tasks:
    - name: Install iptables-persistent
      ansible.builtin.apt:
        name: iptables-persistent
        state: present
      when: ansible_os_family == "Debian"

    - name: Enable IPv4 forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Flush existing iptables rules (optional, use with caution in production)
      ansible.builtin.iptables:
        flush: yes

    - name: Allow SSH from WAN ({{ wan_interface }})
      ansible.builtin.iptables:
        chain: INPUT
        in_interface: "{{ wan_interface }}"
        protocol: tcp
        destination_port: "{{ ssh_port }}"
        ctstate: NEW
        jump: ACCEPT
        state: present

    - name: Allow SSH from LAN ({{ lan_interface }})
      ansible.builtin.iptables:
        chain: INPUT
        in_interface: "{{ lan_interface }}"
        protocol: tcp
        destination_port: "{{ ssh_port }}"
        ctstate: NEW
        jump: ACCEPT
        state: present

    - name: Allow established and related connections
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: RELATED,ESTABLISHED
        jump: ACCEPT
        state: present

    - name: Allow established and related connections
      ansible.builtin.iptables:
        chain: OUTPUT
        ctstate: ESTABLISHED
        jump: ACCEPT
        state: present

    - name: Allow loopback interface traffic
      ansible.builtin.iptables:
        chain: INPUT
        in_interface: lo
        jump: ACCEPT
        state: present

    - name: Allow loopback interface traffic
      ansible.builtin.iptables:
        chain: OUTPUT
        out_interface: lo
        jump: ACCEPT
        state: present

    - name: Allow ICMP (ping) requests
      ansible.builtin.iptables:
        chain: INPUT
        protocol: icmp
        icmp_type: echo-request
        jump: ACCEPT
        state: present

    - name: Allow LAN to WAN forwarding
      ansible.builtin.iptables:
        chain: FORWARD
        in_interface: "{{ lan_interface }}"
        out_interface: "{{ wan_interface }}"
        jump: ACCEPT
        state: present

    - name: Enable SNAT (Masquerade) for WAN traffic
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ wan_interface }}"
        jump: MASQUERADE
        state: present

    - name: Set default iptables policies
      ansible.builtin.iptables:
        chain: "{{ item.chain }}"
        policy: "{{ item.policy }}"
        state: present
      loop:
        - { chain: INPUT, policy: DROP }
        - { chain: FORWARD, policy: DROP }
        - { chain: OUTPUT, policy: ACCEPT }
        
    # - name: Log and Drop INPUT (uncomment to enable)
    #   ansible.builtin.iptables:
    #     chain: INPUT
    #     log_prefix: "IPTABLES_DROP_INPUT: "
    #     jump: LOG
    #     state: present
    # - name: Drop remaining INPUT traffic (uncomment to enable)
    #   ansible.builtin.iptables:
    #     chain: INPUT
    #     jump: DROP
    #     state: present

    # - name: Log and Drop FORWARD (uncomment to enable)
    #   ansible.builtin.iptables:
    #     chain: FORWARD
    #     log_prefix: "IPTABLES_DROP_FORWARD: "
    #     jump: LOG
    #     state: present
    # - name: Drop remaining FORWARD traffic (uncomment to enable)
    #   ansible.builtin.iptables:
    #     chain: FORWARD
    #     jump: DROP
    #     state: present

    - name: Save iptables rules
      community.general.iptables_state:
        path: /etc/iptables/rules.v4
        state: saved
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"